import { motion } from 'framer-motion'
import Popup from './PopupComponent.js'
import Reviews from '../Reviews/Reviews.js'
import { faqs } from './faqs.js'
import CustomDetail from '../CustomDetails/CustomDetails.js'
import close_cross from 'src/assets/svg_images/close_cross.svg'
import { section_titles } from '../Section/section_titles.js'
import scrollToAnchor from '../Section/ScrollToAnchor.js'
import { Context } from 'src/context.js'
import { useContext } from 'react'


export default function AllPopups() {
    const { set_popup_showing } = useContext(Context)
    
    const result_course_sign_variants = {
        popup_hide: { pathLength: 0 },
        popup_show: { pathLength: 1 },
    }
    const reviews_id = 'reviews_popup'
    const faq_id = 'faq_popup'
    const full_view_id = 'full_view_popup'
    
    return (
        <>
            <Popup dict_key='CoursesPageSuccess'
                id='success_course_sign'
                content={
                    <>
                        <motion.svg className='popup_icon_courses_page' 
                        viewBox="-2 -2 70 63" xmlns="http://www.w3.org/2000/svg">
                            <motion.path strokeWidth="2"
                            stroke="#3B2D41"
                            variants={result_course_sign_variants}
                            transition={ { duration: 1, ease: "easeInOut"} }
                            d="M44.129 58.0125C42.4084 58.0061 40.7344 57.4537 39.3497 56.4354L34.4338 52.85C33.8238 52.4021 33.0862 52.1605 32.3287 52.1605C31.5711 52.1605 30.8335 52.4021 30.2235 52.85L25.3076 56.4354C24.0364 57.361 22.5229 57.8986 20.951 57.9826C19.3791 58.0667 17.8166 57.6937 16.4533 56.9089C15.0901 56.1241 13.9848 54.9613 13.2719 53.562C12.559 52.1626 12.2692 50.5869 12.4376 49.0263L13.0976 42.9902C13.1824 42.24 13.0236 41.4826 12.6447 40.8291C12.2658 40.1756 11.6867 39.6605 10.9925 39.3594L5.42797 36.9086C3.98423 36.2775 2.75615 35.2407 1.89382 33.9249C1.03149 32.6091 0.572266 31.0714 0.572266 29.4996C0.572266 27.9278 1.03149 26.39 1.89382 25.0742C2.75615 23.7585 3.98423 22.7217 5.42797 22.0905L10.9925 19.6398C11.6867 19.3387 12.2658 18.8236 12.6447 18.1701C13.0236 17.5165 13.1824 16.7591 13.0976 16.009L12.4376 9.97285C12.2692 8.4123 12.559 6.83657 13.2719 5.4372C13.9848 4.03782 15.0901 2.87507 16.4533 2.09028C17.8166 1.30549 19.3791 0.932449 20.951 1.01651C22.5229 1.10058 24.0364 1.63812 25.3076 2.56381L30.2235 6.14919C30.8335 6.59705 31.5711 6.83864 32.3287 6.83864C33.0862 6.83864 33.8238 6.59705 34.4338 6.14919L39.3497 2.56381C40.2251 1.91776 41.2241 1.45757 42.2849 1.21168C43.3457 0.965788 44.4458 0.939415 45.5173 1.13419C46.6118 1.33221 47.6549 1.74891 48.5838 2.35921C49.5127 2.96951 50.3082 3.76081 50.9225 4.68554C51.0928 4.93426 51.2117 5.2143 51.2724 5.50934C51.333 5.80437 51.3342 6.10849 51.2758 6.40397C51.2173 6.69944 51.1005 6.98037 50.9321 7.23037C50.7637 7.48037 50.547 7.69444 50.2948 7.86011C50.0425 8.02577 49.7597 8.13972 49.4629 8.19529C49.166 8.25087 48.861 8.24698 48.5657 8.18383C48.2704 8.12069 47.9906 7.99956 47.7427 7.8275C47.4948 7.65545 47.2837 7.43591 47.1218 7.18169C46.8471 6.77018 46.4918 6.41832 46.0772 6.14729C45.6626 5.87626 45.1973 5.69165 44.7093 5.60458C44.2395 5.51819 43.7566 5.53111 43.2921 5.64252C42.8275 5.75392 42.3916 5.96133 42.0125 6.25131L37.0966 9.83669C35.7053 10.8535 34.0252 11.4017 32.3002 11.4017C30.5752 11.4017 28.8951 10.8535 27.5038 9.83669L22.5994 6.25131C22.042 5.82932 21.3723 5.58042 20.6739 5.53567C19.9755 5.49092 19.2793 5.65231 18.6724 5.99969C18.0654 6.34707 17.5745 6.86504 17.2611 7.48892C16.9476 8.1128 16.8254 8.81494 16.9097 9.50765L17.5697 15.5325C17.7681 17.2372 17.416 18.9607 16.5647 20.4523C15.7134 21.9439 14.4072 23.1259 12.8359 23.8265L7.26004 26.2773C6.62803 26.557 6.09099 27.0135 5.71406 27.5915C5.33713 28.1695 5.13649 28.8442 5.13649 29.5336C5.13649 30.2231 5.33713 30.8977 5.71406 31.4757C6.09099 32.0537 6.62803 32.5103 7.26004 32.79L12.8359 35.1727C14.4157 35.8636 15.7327 37.04 16.5945 38.5301C17.4564 40.0201 17.818 41.7459 17.6266 43.4553L16.9666 49.4802C16.8823 50.1729 17.0045 50.875 17.318 51.4989C17.6314 52.1228 18.1223 52.6407 18.7293 52.9881C19.3362 53.3355 20.0324 53.4969 20.7308 53.4521C21.4292 53.4074 22.0989 53.1585 22.6562 52.7365L27.5607 49.1511C28.952 48.1343 30.6321 47.5862 32.3571 47.5862C34.0821 47.5862 35.7622 48.1343 37.1535 49.1511L42.0694 52.7365C42.6267 53.1585 43.2964 53.4074 43.9948 53.4521C44.6932 53.4969 45.3894 53.3355 45.9963 52.9881C46.6033 52.6407 47.0942 52.1228 47.4076 51.4989C47.7211 50.875 47.8433 50.1729 47.759 49.4802L47.099 43.4553C46.9005 41.7535 47.2513 40.0328 48.1005 38.5433C48.9498 37.0538 50.2532 35.8731 51.8214 35.1727L57.3973 32.7219C58.0293 32.4422 58.5663 31.9856 58.9433 31.4076C59.3202 30.8296 59.5208 30.155 59.5208 29.4655C59.5208 28.7761 59.3202 28.1014 58.9433 27.5234C58.5663 26.9454 58.0293 26.4889 57.3973 26.2092L54.3704 24.9611C54.0887 24.8467 53.8328 24.6772 53.6179 24.4625C53.403 24.2479 53.2335 23.9925 53.1193 23.7113C53.0051 23.4302 52.9485 23.1291 52.953 22.8259C52.9575 22.5226 53.023 22.2233 53.1454 21.9457C53.2679 21.6681 53.445 21.4178 53.6661 21.2095C53.8873 21.0013 54.1481 20.8394 54.4331 20.7334C54.7181 20.6273 55.0215 20.5794 55.3254 20.5923C55.6293 20.6051 55.9275 20.6786 56.2025 20.8084L59.2293 22.1359C60.6731 22.767 61.9012 23.8038 62.7635 25.1196C63.6258 26.4354 64.0851 27.9732 64.0851 29.545C64.0851 31.1168 63.6258 32.6545 62.7635 33.9703C61.9012 35.2861 60.6731 36.3229 59.2293 36.954L53.6649 39.4048C52.9707 39.7069 52.3913 40.2219 52.0107 40.8748C51.6301 41.5277 51.4681 42.2846 51.5483 43.0355L52.2083 49.0717C52.3993 50.6339 52.1206 52.2175 51.4074 53.6214C50.6943 55.0254 49.5789 56.1865 48.2028 56.9573C46.9608 57.6582 45.5561 58.022 44.129 58.0125Z"/>
                            <motion.path strokeWidth="2"
                            stroke="#F7B01A"
                            variants={result_course_sign_variants}
                            transition={ { delay: 1, duration: 1, ease: "easeInOut"} }
                            d="M32.5904 37.4421C32.2901 37.4423 31.9927 37.3833 31.7154 37.2684C31.438 37.1535 31.1863 36.985 30.9745 36.7727L21.177 27.0036C20.9328 26.8013 20.7337 26.5502 20.5927 26.2666C20.4516 25.983 20.3716 25.673 20.3578 25.3567C20.3441 25.0404 20.3969 24.7248 20.5128 24.43C20.6287 24.1353 20.8052 23.868 21.0309 23.6453C21.2566 23.4226 21.5266 23.2495 21.8234 23.1371C22.1202 23.0247 22.4373 22.9754 22.7544 22.9925C23.0715 23.0096 23.3814 23.0926 23.6644 23.2363C23.9473 23.38 24.197 23.5811 24.3973 23.8267L32.5904 31.996L61.5394 3.08595C61.973 2.69557 62.5406 2.48641 63.1246 2.50177C63.7086 2.51713 64.2643 2.75583 64.6767 3.16846C65.0891 3.58109 65.3265 4.13604 65.3398 4.71841C65.3532 5.30077 65.1414 5.86595 64.7483 6.29691L34.1949 36.7613C33.9855 36.9744 33.7359 37.1442 33.4606 37.261C33.1853 37.3778 32.8896 37.4394 32.5904 37.4421Z"/>
                        </motion.svg>
                        <strong>Вы были успешно записаны!</strong>
                        <p>Ожидайте звонка нашего специалиста.</p>
                    </>
            }/>
            <Popup dict_key='CoursesPageError'
                id='error_course_sign'
                content={
                <>
                    <motion.svg className='popup_icon_courses_page' viewBox="-4 -4 264 264" xmlns="http://www.w3.org/2000/svg">
                        <motion.path strokeWidth="4"
                        stroke="#3B2D41"
                        variants={result_course_sign_variants}
                        transition={ { duration: 1, ease: "easeInOut"} }
                        d="M229.815 97.3803H229.63C227.705 97.3803 225.985 96.1353 225.345 94.2753C224.025 90.4303 222.46 86.6303 220.7 82.9803C219.855 81.2303 220.175 79.1603 221.495 77.8003L221.645 77.6553C226.535 72.7603 229.23 66.2553 229.23 59.3353C229.23 52.4153 226.535 45.9103 221.645 41.0153L215.305 34.6753C210.355 29.7253 203.675 26.7703 196.675 26.7653C189.745 26.7653 183.24 29.4603 178.33 34.3653C176.97 35.7253 174.87 36.0553 173.1 35.1953C169.435 33.4003 165.595 31.8103 161.7 30.4603C159.86 29.8253 158.62 28.1053 158.62 26.1853C158.62 19.2603 155.92 12.7503 151.03 7.86527C146.135 2.97027 139.63 0.280273 132.71 0.280273H123.29C109.005 0.280273 97.38 11.9003 97.38 26.1853C97.38 27.1253 97.09 28.0253 96.535 28.7953C95.98 29.5703 95.21 30.1453 94.3 30.4603C90.405 31.8103 86.565 33.4003 82.9 35.1953C81.13 36.0553 79.03 35.7253 77.66 34.3553C72.765 29.4603 66.26 26.7653 59.335 26.7653C56.09 26.7653 52.935 27.3603 49.995 28.4953C44.955 30.4403 43.63 36.9653 47.45 40.7853C49.545 42.8753 52.67 43.5453 55.43 42.4853C56.66 42.0153 57.98 41.7653 59.335 41.7653C62.25 41.7653 64.99 42.9003 67.06 44.9703C72.95 50.8553 81.955 52.3453 89.48 48.6753C92.605 47.1453 95.88 45.7903 99.21 44.6353C103.07 43.3003 106.36 40.8403 108.73 37.5303C111.14 34.1753 112.4 30.2153 112.38 26.0903C112.35 20.0953 117.365 15.2803 123.36 15.2803H132.71C135.625 15.2803 138.36 16.4103 140.425 18.4753C142.485 20.5303 143.62 23.2703 143.62 26.1853C143.62 34.4903 148.915 41.9053 156.79 44.6353C160.12 45.7903 163.395 47.1453 166.52 48.6753C174.04 52.3453 183.05 50.8603 188.95 44.9603C191.015 42.8953 193.765 41.7603 196.69 41.7653C199.615 41.7703 202.48 43.0653 204.575 45.1603L211.035 51.6203C213.1 53.6803 214.23 56.4203 214.23 59.3353C214.23 62.2503 213.115 64.9453 211.085 67.0053L210.925 67.1603C205.065 73.0253 203.565 82.0053 207.19 89.5053C208.695 92.6203 210.03 95.8653 211.16 99.1453C213.875 107.06 221.295 112.38 229.63 112.38H229.815C235.83 112.38 240.72 117.27 240.72 123.29V132.71C240.72 138.735 235.84 143.615 229.815 143.615H229.44C221.155 143.615 213.745 148.89 211.005 156.745C209.88 159.965 208.55 163.155 207.05 166.225C203.375 173.755 204.86 182.765 210.745 188.655L210.83 188.74C212.925 190.835 214.22 193.655 214.23 196.615C214.24 199.575 213.11 202.3 211.035 204.37L204.38 211.035C200.125 215.285 193.2 215.285 188.98 211.07L188.565 210.645C182.7 204.78 173.71 203.28 166.2 206.915C163.15 208.39 159.99 209.695 156.805 210.795C148.92 213.53 143.62 220.95 143.62 229.255V229.815C143.62 235.825 138.725 240.72 132.71 240.72H123.29C117.275 240.72 112.38 235.825 112.38 229.815V229.255C112.38 220.95 107.08 213.53 99.19 210.795C96.01 209.695 92.85 208.39 89.8 206.915C87.07 205.595 84.145 204.95 81.245 204.95C76.165 204.95 71.155 206.925 67.405 210.68L67.055 211.035C62.8 215.285 55.875 215.285 51.625 211.035L45.165 204.575C43.065 202.475 41.77 199.645 41.77 196.675C41.77 193.705 42.895 191.01 44.965 188.945L45.255 188.655C51.14 182.765 52.625 173.755 48.95 166.23C47.45 163.155 46.12 159.965 44.995 156.745C42.255 148.89 34.845 143.615 26.56 143.615H26.185C20.16 143.615 15.28 138.735 15.28 132.71V123.29C15.28 117.27 20.17 112.38 26.185 112.38H26.37C34.705 112.38 42.125 107.06 44.835 99.1553C45.97 95.8653 47.305 92.6203 48.805 89.5053C52.435 82.0053 50.935 73.0253 45.075 67.1603L44.915 67.0053C42.885 64.9453 41.77 62.2253 41.77 59.3353C41.77 57.9753 42.015 56.6503 42.49 55.4203C43.55 52.6603 42.88 49.5353 40.785 47.4403C36.965 43.6203 30.445 44.9503 28.5 49.9903C27.365 52.9303 26.77 56.0853 26.77 59.3353C26.77 66.2553 29.465 72.7603 34.355 77.6553L34.505 77.8003C35.825 79.1603 36.145 81.2303 35.3 82.9803C33.54 86.6303 31.975 90.4303 30.65 94.2803C30.015 96.1353 28.295 97.3803 26.37 97.3803H26.185C11.9 97.3803 0.280029 109 0.280029 123.29V132.71C0.280029 147.015 11.88 158.615 26.185 158.615H26.56C28.475 158.615 30.19 159.85 30.835 161.69C32.155 165.465 33.715 169.205 35.47 172.81C36.34 174.585 36.005 176.69 34.645 178.05L34.605 178.09C30.18 182.515 27.335 188.34 26.85 194.58C26.255 202.265 28.975 209.595 34.355 214.975L41.02 221.645C51.12 231.735 67.555 231.74 77.69 221.61L78.045 221.25C79.4 219.895 81.5 219.565 83.27 220.42C86.85 222.15 90.555 223.68 94.285 224.97C96.135 225.61 97.38 227.335 97.38 229.255V229.815C97.38 244.12 108.98 255.72 123.285 255.72H132.715C147.02 255.72 158.62 244.12 158.62 229.815V229.255C158.62 227.335 159.865 225.61 161.71 224.97C165.445 223.68 169.15 222.15 172.73 220.42C174.505 219.56 176.6 219.895 177.925 221.22L178.345 221.645C188.445 231.74 204.88 231.74 214.985 221.64L221.64 214.98C227.02 209.6 229.745 202.27 229.15 194.585C228.67 188.345 225.825 182.515 221.395 178.09L221.355 178.05C219.995 176.69 219.66 174.585 220.53 172.805C222.285 169.205 223.845 165.465 225.165 161.69C225.81 159.85 227.525 158.615 229.44 158.615H229.815C244.12 158.615 255.72 147.015 255.72 132.71V123.29C255.72 109 244.1 97.3803 229.815 97.3803Z"/>
                        <motion.path strokeWidth="4"
                        stroke="#9D173F"
                        variants={result_course_sign_variants}
                        transition={ { delay: 1, duration: 1, ease: "easeInOut"} }
                        d="M152.4 177.62C148.45 177.62 144.74 176.08 141.95 173.285L128 159.335L114.045 173.29C111.26 176.08 107.55 177.62 103.6 177.62H103.595C99.65 177.62 95.94 176.08 93.15 173.29L82.425 162.565C79.635 159.775 78.1 156.065 78.1 152.115C78.1 148.165 79.635 144.455 82.425 141.665L96.38 127.71L82.425 113.755C79.635 110.97 78.095 107.255 78.095 103.305C78.095 99.3604 79.635 95.6504 82.425 92.8604L93.15 82.1354C98.91 76.3754 108.285 76.3754 114.045 82.1354L128 96.0904L141.955 82.1354C147.715 76.3754 157.09 76.3754 162.85 82.1354L173.575 92.8604C176.365 95.6504 177.9 99.3604 177.905 103.305C177.905 107.255 176.37 110.97 173.57 113.76L159.62 127.71L173.575 141.665C176.365 144.455 177.9 148.165 177.9 152.115C177.9 156.065 176.365 159.775 173.575 162.565L162.85 173.29C160.06 176.08 156.35 177.615 152.405 177.62H152.4ZM93.19 152.12L103.6 162.53L122.7 143.43C125.63 140.5 130.38 140.5 133.305 143.43L152.405 162.53L162.815 152.12L143.715 133.02C140.785 130.09 140.785 125.34 143.715 122.415L162.815 103.315L152.405 92.9054L133.305 112.005C130.375 114.935 125.625 114.935 122.7 112.005L103.6 92.9054L93.19 103.315L112.29 122.415C115.22 125.345 115.22 130.095 112.29 133.02L93.19 152.12Z" />
                    </motion.svg>
                    <strong>Что то пошло не так...</strong>
                    <p>Приносим свои глубочайшие извинения, попробуйте еще раз чуть позже.</p>
                </>
            }/>
            
            <Popup dict_key = 'ReviewsPopup'
                id={reviews_id}
                content={
                <>
                    <CloseImage popup_id={reviews_id}
                    set_popup_showing={set_popup_showing}/>
                    <h3>Отзывы</h3>
                    <div className='popup_container reviews_container'>
                        <Reviews />
                    </div>
                </>
            }/>
            <Popup dict_key = 'FAQPopup'
                id={faq_id}
                content={
                <>
                    <CloseImage popup_id={faq_id}
                    set_popup_showing={set_popup_showing}/>
                    <h3>Частые вопросы</h3>
                    <div className='popup_container faq_container'>
                        <div id='faq_wrapper'>
                        { faqs.map( (value, index) => {
                            return (
                            <CustomDetail key={index}
                                summary={value.question}
                                text={value.text}/>
                            ) } )
                        }
                        </div>
                    </div>
                </>
            }/>
            <Popup dict_key='FullViewPopup'
            id={full_view_id}
            content={
                <div id='full_view_container'>
                    <CloseImage popup_id={full_view_id}
                    set_popup_showing={set_popup_showing}/>
                    
                    <PreviousHeaderLink text='Отзывы'
                    popup_id={reviews_id}
                    set_popup_showing={set_popup_showing}/>

                    <PreviousHeaderLink text='Частые вопросы'
                    popup_id={faq_id}
                    set_popup_showing={set_popup_showing}/>

                    { section_titles.map( (value, index) => {
                        return (
                            <strong key={index}>
                                <a onClick={ () => { 
                                    scrollToAnchor(value.content_id)
                                    popup_close(full_view_id, set_popup_showing)
                                }}>
                                    {value.title}
                                </a>
                            </strong>
                        )}
                    )}
                </div>
            }/>

            <div className="custom_backdrop"/>
        </>
    )
}

function CloseImage( {popup_id, set_popup_showing} ) {
    return (
        <motion.img src={close_cross} 
            className='close_full_view_icon'
            initial={ {x: '-100%'} }
            whileTap={ {x: '-100%', scale: 0.9} }
            transition={ {ease: 'easeOut', duration: 0.025} }
            onClick={ () => { popup_close(popup_id, set_popup_showing) }}/>
    )
}

function PreviousHeaderLink( {text, popup_id, set_popup_showing} ) {
    return (
        <strong>
            <a onClick={ () => { 
                let popup = document.querySelector(`#${popup_id}`)
                popup.show()
                set_popup_showing(true)
            }}>
                {text}
            </a>
        </strong>
    )
}

function popup_close(popup_id, set_popup_showing) {
    let popup = document.querySelector(`#${popup_id}`)
    popup.close()
    set_popup_showing(false)
}